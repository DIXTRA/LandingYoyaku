%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    :javascript
      $(document).ready(function () {

          function exportTableToCSV($table, filename) {

              var $rows = $table.find('tr:has(td)'),

                  // Temporary delimiter characters unlikely to be typed by keyboard
                  // This is to avoid accidentally splitting the actual contents
                  tmpColDelim = String.fromCharCode(11), // vertical tab character
                  tmpRowDelim = String.fromCharCode(0), // null character

                  // actual delimiter characters for CSV format
                  colDelim = '","',
                  rowDelim = '"\r\n"',

                  // Grab text from table into CSV formatted string
                  csv = '"' + $rows.map(function (i, row) {
                      var $row = $(row),
                          $cols = $row.find('td');

                      return $cols.map(function (j, col) {
                          var $col = $(col),
                              text = $col.text();

                          return text.replace(/"/g, '""'); // escape double quotes

                      }).get().join(tmpColDelim);

                  }).get().join(tmpRowDelim)
                      .split(tmpRowDelim).join(rowDelim)
                      .split(tmpColDelim).join(colDelim) + '"',

                  // Data URI
                  csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

              $(this)
                  .attr({
                  'download': filename,
                      'href': csvData,
                      'target': '_blank'
              });
          }

          // This must be a hyperlink
          $(".export").on('click', function (event) {
              // CSV
              exportTableToCSV.call(this, $('#dvData>table'), 'export.csv');

              // IF CSV, don't do event.preventDefault() or return false
              // We actually need this to be a typical hyperlink
          });
      });

.row(style="padding-top: 2em;")
  .col-md-12
    %h2{:style => "color:#34495e; text-align:left; font-size: 30px; font-weight: bold;"} Overview
    %a.btn.btn-default.btn-xs(ng-href="/api/reports/group/{{oid}}/user_history.csv") Download CSV
    %hr
  .col-md-12.well{:style => "background-color:#fff; text-align:center;"}
    .col-md-4
      %p{:style => ""} Total Members: 
      %h2{:style => "color:#2ecc71; font-size: 60px; font-weight: bold;"} {{members.length}}
    .col-md-4
      %p Active Members:
      %h2{:style => "color:#2ecc71; font-size: 60px; font-weight: bold;"} {{activemembers}}
    .col-md-4
      %p{:style => ""} % Active: 
      %h2(ng-style="{'color': (activePercentage > 25) ? '#2ecc71' : '#e74c3c' }" style= "font-size: 60px; font-weight: bold;") {{activePercentage}} %
.row
  .col-md-12
    %h2{:style => "color:#34495e; text-align:left; font-size: 30px; font-weight: bold;"} Group Performance
    %a.btn.btn-default.btn-xs(ng-href="/api/reports/group/{{oid}}/user_scores.csv") Download CSV
    %hr
  .col-md-12.well{:style => "background-color:#fff;"}
    .col-md-4{:style => "text-align:center;"}
      %p{:style => ""} Avg. this Week 
      %h2{:style => "color:#2ecc71; font-size: 60px; font-weight: bold;"} {{convert_score(spk)}}
    .col-md-4{:style => "text-align:center;"}
      %p Avg. this Month
      %h2{:style => "color:#2ecc71; font-size: 60px; font-weight: bold;"} {{convert_score(office.spc)}}
    .col-md-4{:style => "text-align:center;"}
      %p Total this Month
      %h2{:style => "color:#2ecc71;  font-size: 60px; font-weight: bold;"} {{ convert_score(totalPoints) }}{{boardScoreSuffix}}
  /
    .col-md-12
      %h2{:style => "color:#34495e; text-align:left; font-size: 30px; font-weight: bold;"} Device Popularity
      %hr

    .col-md-12.well{:style => "background-color:#fff;"}
      .col-md-4
        %p {{desc}}
        %h2{:style => "color:#2ecc71; font-size: 60px; font-weight: bold;"} {{attachments.length}}
  
  .col-md-12
    %h2{:style => "color:#34495e; text-align:left; font-size: 30px; font-weight: bold;"} Daily User Scores
    .row(ng-repeat="i in getMonthsBack(monthBackLimit) track by $index")

      .col-md-3
        %small {{ month_back($index).format('MMMM YYYY') }}
      .col-md-4
        %a.btn.btn-default.btn-xs(ng-href="/api/reports/group/{{oid}}/user_daily_scores.csv?month={{ month_back($index).format('M') }}&year={{ month_back($index).format('YYYY') }}")  
          Download CSV
    %hr

  .col-md-12
    %h2{:style => "color:#34495e; text-align:left; font-size: 30px; font-weight: bold;"} Daily Office Score
    %small Over the last 60 days
    %hr
  .col-md-12.well{:style => "background-color:#fff;"}
    

    %div#dvData.sys-label 

    %bar-chart.dr-graph(data="scoreData" bang="pointsLabel")

  .col-md-12
    %h2{:style => "color:#34495e; text-align:left; font-size: 30px; font-weight: bold;"} Daily Score Average
    %small Over the last 60 days
    %hr

  .col-md-12.well{:style => "background-color:#fff;"}
    %div.sys-label 

    %bar-chart.dr-graph(data="pointsData" bang="pointsLabel")

  .col-md-12
    %h2{:style => "color:#34495e; text-align:left; font-size: 30px; font-weight: bold;"} User Interactions
    %small Measured by daily page loads
    %hr

  .col-md-12.well{:style => "background-color:#fff;"}
    %div.sys-label 

    %bar-chart.dr-graph(data="myData" bang="engageLabel")
  .col-md-12
    %h2{:style => "color:#34495e; text-align:left; font-size: 30px; font-weight: bold;"} Past Rewards
    %hr
  .col-md-12
    %div
      %p(ng-show="openReqs <= 0") None!

      %div(ng-show="openReqs.length > 0")
        %ul.list-group(ng-repeat="req in openReqs")
          %li.list-group-item.list-group-item-success{:style => "background-color: #00adef;"}
            .row
              .col-md-12{:style => "color:#fff;"} <strong>{{ date_back(req.ts) }}</strong>

          %li.list-group-item
            .row
              .col-md-12 
                %strong Vendor: 
                {{req.v}}
              .col-md-12 
                %strong Reward: 
                {{req.d}}
          %li.list-group-item
            %p 
            %strong Winners
            .row(ng-repeat="rw in req.r")
              .col-md-12(ng-if="rw.team == undefined")
                {{$index+1}}. {{rw.name}} - {{rw.email}}  {{rw.amount/100|currency}}
              .col-md-12(ng-if="rw.team != undefined")
                {{$index+1}}. {{rw.name}} - {{rw.email}} ({{rw.team}})
            %br
            .row
              .col-md-2
                %a.btn.btn-default.btn-xs(ng-href="/api/freqs/{{req.nt}}.csv") Download CSV
            %br
