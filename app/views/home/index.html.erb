<h1>Home#index</h1>
<p>Find me in app/views/home/index.html.erb</p>
<h1>Hello, Rails! majo</h1>

<style>
    .btn-wrapper {
        text-align: center;
    }

    .btn-wrapper .btn {
        display: inline-block;
    }

    .main-form {
        margin-top: 5%;
        margin-bottom: 150px;
    }

    #diary-display {
        margin-top: 50px;
    }

    #diary-display ul li span, #poll-display ul li span{
        margin-right: 30px;
    }

</style>

<div class= "row">
  <div class="col-md-6 col-md-offset-3 main-form">
    <h2 align="center"> Measurements</h2>
    <br/>
    <div class="row" style="position:relative;">
      <div class="col-xs-12 panel panel-default" style="width:100%; padding:20px;" >
        <h4 align="center"> Current Measurement Counts </h4>
        <div id="lb_measurement_count" align="center" style="font-size: 16px;font-weight: bold;">0</div>
        <div style="position:absolute;top:20px;right:20px;" >
          <button class="btn btn-primary" style="" id="btn-refresh">Refresh</button>
        </div>
      </div>
    </div>
    <br/>
    <div class="row" style="position:relative;">
      <div class="col-xs-12 panel panel-default" style="width:100%; padding:20px;">
        <div align="center">
          <h4 align="center">Poller Status</h4>
          <small style="padding: 0 16px 16px 16px; display: block; max-width: 600px;">Count.It polls Google Fit, Misfit, & RunKeeper</small>
          <div class="row">
            <div class="col-xs-12">
              <form>
                <form-group>
                  <div class="radio-inline" style="min-width:100px;">
                    <input type="radio" name="poller_status" id="p_status_on" value="on"/>
                    <label class="lbl" for="p_status_on">On</label>
                  </div>
                  <div class="radio-inline" style="min-width:100px;">
                    <input type="radio" name="poller_status" id="p_status_off" value="off"/>
                    <label class="lbl" for="p_status_off">Off</label>
                  </div>
                </form-group>
                <input type="hidden" name="poller_status_value" id="poller_status_value" value="off" />
              </form>
            </div>
          </div>
          <br/>
          <br/>
          <div class="row">
            <h4 align="center">Subscriptions Status</h4>
            <small style="padding: 0 16px 16px 16px; display: block; max-width: 600px;">New data pushed to Count.It from Fitbit, Garmin, and Strava</small>
            <div class="col-xs-12">
              <form>
                <form-group>
                  <div class="radio-inline" style="min-width:100px;">
                    <input type="radio" name="subs_status" id="p_subs_on" value="on"/>
                    <label class="lbl" for="p_subs_on">On</label>
                  </div>
                  <div class="radio-inline" style="min-width:100px;">
                    <input type="radio" name="subs_status" id="p_subs_off" value="off"/>
                    <label class="lbl" for="p_subs_off">Off</label>
                  </div>
                </form-group>
                <input type="hidden" name="subs_status_value" id="subs_status_value" value="off" />
              </form>
            </div>
          </div>
          <br/>
          <br/>
          <div class="row">
            <h4 align="center">Manual Sync</h4>
            <small style="padding: 0 16px 16px 16px; display: block; max-width: 600px;">Manual Sync gets any new data from all above trackers, regardless of poller or subscription status. Apple Health handled separately by the app.</small>
            <div class="col-xs-12">
              <form>
                <form-group>
                  <div class="radio-inline" style="min-width:100px;">
                    <input type="radio" name="msync_status" id="p_msync_on" value="on"/>
                    <label class="lbl" for="p_msync_on">On</label>
                  </div>
                  <div class="radio-inline" style="min-width:100px;">
                    <input type="radio" name="msync_status" id="p_msync_off" value="off"/>
                    <label class="lbl" for="p_msync_off">Off</label>
                  </div>
                </form-group>
                <input type="hidden" name="msync_status_value" id="msync_status_value" value="off" />
              </form>
            </div>
          </div>
          <div style="position:absolute;top:20px;right:20px;" >
            <button class="btn btn-primary" style="" id="btn-save" onClick="updatePollerStatus()">Save</button>
          </div>
        </div>
      </div>
    </div>
    <br/>

    <h5 align="center"> Lookup a User </h5>


    <div class="row" style="position:relative;">

      <div class="col-xs-8" style="" >
        <label for="user-email"> User email </label>
        <input type="text" class="form-control" id="user_email" required="required"></input>
      </div>
      <div class="col-xs-4" style="position:absolute;bottom:0px;right:0px;" >
        <button class="btn btn-primary" style="" id="btn-look-up">Look up user</button>
      </div>
    </div>

    <div class="col-xs-12">
      <form style="text-align: center; margin-bottom: 30px;
        margin-top: 30px;" >
        <form-group align="center">
          <h5 style="margin-bottom: 20px;"> Email verification status </h5>
          <div class="radio-inline" style="min-width:100px;">
            <input type="radio" name="user_email_verification" id="user_email_verification_on" value="true" disabled/>
            <label class="lbl" for="user_email_verification_on">Verified</label>
          </div>
          <div class="radio-inline" style="min-width:100px;">
            <input type="radio" name="user_email_verification" id="user_email_verification_off" value="false" disabled/>
            <label class="lbl" for="user_email_verification_off">Not verified</label>
          </div>
        </form-group>
        <input type="hidden" name="user_email_verification_value" id="user_email_verification_value" value="false" />
      </form>
    </div>

    <h5 align="center"> Search & Update User Measurements </h5>

    <div class="form-group">
      <label for="source"> Source Device </label>
      <%= select_tag :sid,
                     options_for_select([]),
                     {class: "form-control source_device", required: true, disabled: true}
      %>
    </div>

    <div class="btn-wrapper">

      <button class="btn btn-primary disabled" id="btn-diary" >See diary entries</button>
      <button class="btn btn-primary disabled" id="btn-poll">See tracker activites</button>
      <button class="btn btn-primary disabled" id="btn-create">Create Manual Activity</button>
    </div>


    <div id="create-measurement-display" class="hidden" >
      <%= form_for :measurement, url: "/measurement", html: {multipart: true, id: "measurement-form"} do |f|%>
        <div>
          <%= f.hidden_field :uid, id: "uid_field" %>

          <div class="form-group">
            <label for="value"> Value </label>
            <%= f.number_field :value, class: "form-control", required: true, min: 1, step: 1%>
          </div>

          <div class="form-group">
            <label for="units"> Units </label>
            <%= f.select :units,
                         options_for_select([["steps", "steps"],
                                             ["meters", "meters"]
                                            ]),
                         {},
                         {class: "form-control",  required: true}
            %>
          </div>

          <div class="form-group">
            <label for="source"> Source Device </label>
            <%= f.select :sid,
                         options_for_select([]),
                         {},
                         {class: "form-control source_device", required: true, disabled: true}
            %>
          </div>



          <%= f.hidden_field :source, id: "device_name_field" %>

          <div class="form-group">
            <label for="activity">Activity Type</label>
            <%= f.select :activity,
                         options_for_select([["walk", "walk"],
                                             ["run", "run"],
                                             ["bike", "bike"]
                                            ]),
                         {},
                         {class: "form-control", required: true}
            %>
          </div>

          <%= f.hidden_field :zone, value: "America/New_York"%>

          <div class="form-group">
            <label for="datetime"> Date of measurement</label>
            <%= f.text_field :mtime, class: "form-control", id: "measure-date",required: true%>
          </div>

          <%= f.hidden_field :rtime, :value => Time.now %>

          <!-- <button class="btn btn-primary" id="btn-submit">Submit</button> -->
        </div>
      <%end%>

      <div class="btn-wrapper">
        <button class="btn btn-primary" id="btn-submit" disabled>Submit</button>
      </div>

    </div>
  </div>


</div>
<div class="row">
  <div class="col-md-6 col-md-offset-3" id="diary-display" class="hidden" >
    <ul id="diary_entries">
    </ul>
  </div>
</div>

<div class="row">
  <div class="col-md-6 col-md-offset-3" id="poll-display">
    <ul id="measurements" class="" >
    </ul>

    <div id="responses" class="" >
    </div>

  </div>
</div>



<script>
    $(document).ready(function(){
        $(".main-form").find('[value=""]').remove();
        getMeasurementCount();
        getPollerStatus();
    });

    function getMeasurementCount() {
        $.ajax({
            type: "GET",
            url: "/measurement/getCount",
            data: {},
            success: function(data) {
                $("#lb_measurement_count").text(data);
            }
        })
    }

    function updatePollerStatus() {
        let poller_value = $('input[name=poller_status]:checked').val();
        let subs_value = $('input[name=subs_status]:checked').val();
        let msync_value = $('input[name=msync_status]:checked').val();

        var r = confirm("Are you sure to change poller status?");

        if (r) {
            $.ajax({
                type: "POST",
                url: "/poller/status",
                data: {
                    'poller_status': poller_value,
                    'subs_status': subs_value,
                    'msync_status': msync_value,
                },
                success: function (data) {
                    data = data.status;
                    $("#poller_status_value").val(data['poller_status']);
                    $("input[name=poller_status][value=" + data['poller_status'] + "]").prop('checked', true);

                    $("#subs_status_value").val(data['subs_status']);
                    $("input[name=subs_status][value=" + data['subs_status'] + "]").prop('checked', true);

                    $("#msync_status_value").val(data['msync_status']);
                    $("input[name=msync_status][value=" + data['msync_status'] + "]").prop('checked', true);
                }
            })
        }
    }

    function getPollerStatus() {
        $.ajax({
            type: "GET",
            url: "/poller/status",
            data: {},
            success: function(data) {
                data = data.status
                $("#poller_status_value").val(data['poller_status']);
                $("input[name=poller_status][value=" + data['poller_status'] + "]").prop('checked', true);

                $("#subs_status_value").val(data['subs_status']);
                $("input[name=subs_status][value=" + data['subs_status'] + "]").prop('checked', true);

                $("#msync_status_value").val(data['msync_status']);
                $("input[name=msync_status][value=" + data['msync_status'] + "]").prop('checked', true);
            }
        })
    }

    function getident() {
        $.ajax({
            type: "GET",
            url: "/user",
            data: {email: $("#user_email").val()},
            success: function(data) {
                if (!data || data == ""){
                    alert("User does not exist or email is invalid");
                }
                else {
                    $("#uid_field").val(data.nt);
                    $("#btn-diary").removeClass("disabled");
                    $("#btn-poll").removeClass("disabled");
                    $("#btn-create").removeClass("disabled");
                    $("#user_email_verification_on").removeAttr('disabled');
                    $("#user_email_verification_off").removeAttr('disabled');

                    $("#user_email_verification_value").val(!!data['ec']);
                    $("input[name=user_email_verification][value=" + !!data['ec'] + "]").prop('checked', true);

                    $("input[name=user_email_verification]").unbind().change(function() {
                        const val = JSON.parse(this.value);

                        $.ajax({
                            type: "POST",
                            url: "/api/user/" + data.nt  + "/email/confirm_admin",
                            data: { confirm: val },
                        });
                    });

                    getDeviceAll();
                }
            }

        })
    }

    function getDeviceAll() {
        $.ajax({
            type: "GET",
            url: "/attachment/all",
            data: {uid: $("#uid_field").val()},
            success: function(data) {
                if (!data || data == "") {
                    alert("This user does not have any devices");
                }
                else {
                    var device_select = $(".source_device");
                    device_select.attr("disabled", false);
                    $.each(data, function(k,v) {
                        device_select.append($("<option></option").attr("value", v)
                            .attr("id", v + "-opt")
                            .attr("name", k)
                            .text(k));
                    });
                    device_select.find('[value=""]').remove();

                    $("#btn-submit").attr("disabled", false);
                }
            }
        })
    }

    function getDiaryEntries() {
        $.ajax({
            type: "GET",
            url: "/diary/all",
            data: {uid: $("#uid_field").val()},
            success: function(data) {
                var diary_display = $("#diary-display > ul");
                $.each(data, function(index) {
                    e = data[index];
                    diary_display.append("<li>" + "<span>" + e.date + "</span>" +
                        "<span>" + e.activity_source + "</span>" +
                        "<span>" + e.activity_type + "</span>" +
                        "<span>score=" + convert_score(e.score) + "</span>" +
                        "<span>val=" + e.measured_value + " " + e.units + "</span>" +
                        "</li>");
                })
            }
        })
    }

    function convert_score(x) {
        return x.toFixed()
    }

    function getTrackerActivities() {

        // $.ajax({
        // 	type: "GET",
        // 	url: "/tracker/activites",
        // 	data: {user_id: $("#uid_field").val(), tracker: $("#source_device").val()},
        // 	success: function(data) {
        // 		alert(data);
        // 		// $.each(data, function(index) {
        // 		// 	var poll_display = $("#poll-display > ul");
        // 		// 	e = data[index];
        // 		// 	alert(e);
        // 		// 	poll_display.append("<li>" + "<span>" + Object.keys(e)[0] + "</span>" +
        // 		// 									"<span>" + e[Object.keys(e)[0]] + "</span>" +
        // 		// 									"</li>");
        // 		// })
        // 	}
        // })

        $.ajax({
            type: "GET",
            url: "/tracker/activities",
            data: {uid: $("#uid_field").val(), tracker: $(".source_device").val()},
            success: function(data) {

                $("#measurements").html("")

                measurements = data['measurements']
                m_div = $("#measurements")
                for (var m in measurements) {
                    //m_str = JSON.stringify(measurements[m])
                    //console.log(m_str)
                    obj = measurements[m]
                    if (obj != null) {
                        if (Array.isArray(obj)) {		// for shine
                            obj = obj[0]
                        }
                        v = parseFloat(obj.value);
                        u = obj.units;
                        a = obj.activity;
                        s = obj.source;
                        t = obj.mtime;
                        m_str = ""
                        if (a == "bike") {
                            c = 0.1
                            c = Math.round(v * .000621371).toFixed(2);
                            m_str =  v + " " + u + " " + a + " " + c + " "+ t
                        } else {
                            m_str =  v + " " + u + " " + a + " " + t
                        }
                        m_div.append("<li>" + m_str + "</li>")
                    }
                }

                //activities = data['activities']
                //r_str = JSON.stringify(activities)
                //$("#responses").html(r_str)
            }
        })
    }

    $("#btn-diary").on('click', function(){
        $("#create-measurement-display").addClass("hidden");
        $("#poll-display").addClass("hidden");
        $("#diary-display").removeClass("hidden")
        getDiaryEntries();
    });

    $("#btn-look-up").on('click', function() {
        $('#measurements').empty()
        $('#diary_entries').empty()
        $('.source_device').empty()
        getident();
    });

    $("#btn-refresh").on('click', function() {
        getMeasurementCount();
    });

    $("#btn-poll").on('click', function() {
        $("#create-measurement-display").addClass("hidden");
        $("#poll-display").removeClass("hidden");
        $("#diary-display").addClass("hidden");
        getTrackerActivities();
    });

    $("#btn-create").on('click', function() {
        $("#create-measurement-display").removeClass("hidden");
        $("#poll-display").addClass("hidden");
        $("#diary-display").addClass("hidden");
    });

    $("#btn-submit").on('click', function(){
        device_select = $(".source_device");
        // alert("#" + device_select.val() + "-opt");
        $("#device_name_field").val($("#" + device_select.val() + "-opt").html());

        measure_date = $("#measure-date")
        measure_date.val(measure_date.val() + "T10:00:00Z");

        $("#measurement-form").submit();
    })
</script>
